import tkinter as tk
from tkinter import *
from turtle import color, width
from PIL import ImageTk
from ErrorTest import resetFileBox
from tkinter import ttk


class sortWindow(tk.Toplevel):
        
    def __init__(self):#, label_file_explorer):
        super().__init__()     
        
        self.focus_set()
        self.grab_set_global()
        
        title = tk.Text(self, font= ("Arial 10 bold"), background="light gray",
                        padx=120.5, pady=2.5, width = 8, height = 1)
        title.insert("1.0", "Sorting Options")
        title.configure(state="disabled")
        title.place(x=2.5, y=2.5)
        

        #f = tk.Frame(width = 300, height = 150)
        self.c = tk.Canvas(self, bg= "white", width = 200, height =300)
        self.c.pack()      
        
        self.background_image = ImageTk.PhotoImage(file = "Files\\Logos\\background.png")
        self.c.create_image(0, 0, image = self.background_image, anchor = NW)
      
        self.overrideredirect(True)
        self.resizable(0,0)

        # window sizing and positioning
        window_width = 200
        window_height = 300
        scr_width = self.winfo_screenwidth()
        scr_height = self.winfo_screenheight()

        ctr_x = int(scr_width/2 - window_width/2)
        ctr_y = int(scr_height/2 - window_height/2)

        self.geometry(f'{window_width}x{window_height}+{ctr_x}+{ctr_y}')
        self.resizable(False, False)

        # setting and positiong the prompt
        #promptTitle = self.c.create_text(150, 17, text="Continue Program?",
        #                    fill = "gray", font=("Arial 10"), justify=CENTER)
        
        promptBorder = self.c.create_rectangle(15, 60, 185, 235, outline='silver', width=2)
   
        Sortprompt = self.c.create_text(100, 30, text="Please Select Options" + "\n" + "for Sorting File",
                                fill = "white", font=("Arial 11"), width = 180, justify=CENTER)
        
        #buttonStyle = ttk.Style(self)
        #buttonStyle.theme_use('alt')

        cbVar = StringVar(self)
        def onCheck():
            cbVar.set(1)
        cbVar.set(0)
        cb1 = Checkbutton(self, onvalue=1, offvalue=0, 
                          variable=cbVar, fg="white", bg="black",
                          activeforeground="white", activebackground="black",
                          selectcolor="black", command=onCheck()) 
        cb1.place(x=60, y=80)
        #r1.configure(foreground="red", background="black")
                        
        #style_name = r1.winfo_class()
        #buttonStyle.configure(style_name, indicatoron=True, foreground="red",
        #                      background="black", indicatorcolor="blue")
        #buttonStyle.map(style_name,
        #                foreground = [("disabled", "gray"),
        #                              ("pressed", "blue"),
        #                              ("active", "red")],
        #                background = [("disabled", "black"),
        #                              ("pressed", "green"),
        #                              ("active", "yellow")],
        #                indicatorcolor= [("disabled", "purple"),
        #                             ("pressed", "blue"),
        #                             ("active", "magenta")])
        
        
       
   
        #prompt = self.c.create_text(150, 50, text="Would You Like to Process Another File?",
        #                fill = "white", font=("Arial 11"), width = 280, justify=CENTER)

        #yesButton = tk.Button(self, text = "Yes", width = 10, height = 1, bg="silver")
        #yesButton.place(x=52.5, y=78)
        
        doneButton = tk.Button(self, text = "Done", width = 10, height = 1, bg="silver")                               
        doneButton.place(x=62.5, y=250)
              
        def doneClick():
            self.grab_release()
            self.destroy()
            exit()
            
        #def YesClick(label_file_explorer):
        #        resetFileBox(label_file_explorer)
        #        self.grab_release()
        #        self.destroy()
             
        doneButton.configure(command = lambda: doneClick())
        
        #yesButton.configure(command = lambda: YesClick(label_file_explorer))
        
        
                
#def showPrompt(label_file_explorer):
#    programPrompt = sortWindow(label_file_explorer)
#    programPrompt.mainloop()
    

def showSort():
    programSortWindow = sortWindow()
    programSortWindow.mainloop()
    
    
showSort()